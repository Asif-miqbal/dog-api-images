name: File size and name checks

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the "main" branch
  push:
    branches: [ "master", "main", "hotfix/deploy" ]
  pull_request:
    branches: [ "master", "main", "hotfix/deploy"]

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v3

      - name: Configure git with username
        run: |
          git config --global user.email "1583854+ElliottLandsborough@users.noreply.github.com"
          git config --global user.name "ElliottLandsborough"

      - name: Display a list of uppercase files
        run: find . -name "*.*[A-Z]*" ! -name "*.*[^A-Z]*"

      - name: Find uppercase 'JPG', 'JPEG' or 'PNG' and rename to lowercase equivalents
        run: find . -depth -regex ".*\.\(JPG\|JPEG\|PNG\)" -type f -exec bash -c 'base=${0%.*} ext=${0##*.} a=${base,,}.${ext,,}; [ "$a" != "$0" ] && mv -- "$0" "$a"' {} \;

      - name: Display a list of uppercase files
        run: find . -name "*.*[A-Z]*" ! -name "*.*[^A-Z]*"

      # Do we have any 'png' files? Convert to 'jpg'
      - name: Fix 'png' files
        run: find . -name "*.png" -exec mogrify -format jpg {} \;

      # Delete 'png files'
      - name: Delete 'png' files
        run: find . -name "*.png" -delete;

      # Rename jpeg to jpg
      - name: Rename 'jpeg' to 'jpg' after installing rename package
        run: |
          sudo apt install -y rename
          find . -type f -name '*.jpeg' -print0 | xargs -0 rename 's/\.jpeg/\.jpg/'

      # Replace spaces with '_' in filenames
      - name: Replace spaces with '_' in filenames
        run: find . -type f -name "* *" | while read file; do mv "$file" ${file// /_}; done

      # At this point, if anything was changed, commit if we are on main
      - name: Commit report
        if: github.ref == 'refs/heads/main'
        run: |
          if [[ $(git status -s) ]]; then
            git add -A
            git commit -m "Fix file names"
            git push origin main
          fi

      # Lossy jpeg optimization
      - name: Bring resolution down to 1080 maximum on x and y, 80% qual on images over 500K big
        run: find . -type f -regex ".*\.\(jpg\|jpeg\)" -size +500k -exec convert {} -resize 1080x1080 -quality 70% {} \;

      # Twice, once to actually output the list, second time to output non zero and break CI
      - name: List images that are too large
        run: |
         find . -regex ".*\.\(jpg\|jpeg\)" -type f -size +500k
         find . -regex ".*\.\(jpg\|jpeg\)" -type f -size +500k -exec false {} +

      # Install jpegoptim, only on main
      - name: Install jpegoptim
        if: github.ref == 'refs/heads/main'
        run: |
          sudo apt update
          sudo apt install -y jpegoptim

      # Lossless jpeg optimization, only on main
      - name: Run through jpegoptim
        if: github.ref == 'refs/heads/main'
        run: find . -type f -regex ".*\.\(jpg\|jpeg\)" -exec jpegoptim -t --all-progressive --strip-all {} \;

      - name: echo bucket name
        env:
          S3_BUCKET: ${{ secrets.S3_BUCKET }}
        run: echo "aws s3 sync --delete-removed --exclude '.git*' --exclude 'LICENSE' --exclude '*.md' --include '*.jp*g' ./ s3://$S3_BUCKET"

      - name: echo bucket name
        env:
          S3_BUCKET: ${{ secrets.S3_BUCKET }}
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        run: aws s3 ls s3://$S3_BUCKET

      - name: Copy files to s3
        env:
          S3_BUCKET: ${{ secrets.S3_BUCKET }}
        run: aws s3 sync --delete --exclude '.git*' --exclude 'LICENSE' --exclude '*.md' --include '*.jp*g' ./ s3://$S3_BUCKET
